"""Initialize the database with dummy data."""

import random
import json
import numpy as np
import pandas as pd
from main import app
from extensions import db
from app.operations.user_operations import add_user, get_user_by_name
from app.operations.student_operations import get_students_from_level
from app.operations.class_operations import add_class, get_classes_from_level
from app.operations.lesson_operations import add_lesson
from app.operations.class_group_operations import (
    add_class_group,
    enroll_student_in_group,
    get_class_group_by_name,
)
from app.operations.event_operations import add_event
from app.operations.notification_operations import add_notification
from app.operations.user_class_group_operations import add_user_class_group
from app.operations.asso_operations import subscribe_to_asso
from app.operations.message_operations import add_class_message
from app.models import UserLevel

CLASSES_PER_STUDENT = 10

with open("data/classes.json", "r") as fichier_json:
    classes = json.load(fichier_json)


student_names = [
    ("Alice", "Adams"),
    ("Bob", "Baker"),
    ("Carol", "Clark"),
    ("Dave", "Davis"),
    ("Eve", "Evans"),
    ("Fred", "Frank"),
    ("Grace", "Ghosh"),
    ("Hal", "Hills"),
    ("Isaac", "Irwin"),
    ("Julia", "Jones"),
    ("Karl", "Klein"),
    ("Lara", "Lopez"),
    ("Max", "Mason"),
    ("Nora", "Nalty"),
    ("Oscar", "Ochoa"),
    ("Paul", "Patel"),
    ("Quinn", "Quinn"),
    ("Rob", "Reily"),
    ("Susan", "Smith"),
    ("Tom", "Trott"),
    ("Ursula", "Usman"),
    ("Victor", "Valdo"),
    ("Wendy", "White"),
    ("Xavier", "Xiang"),
    ("Yara", "Yakub"),
    ("Zack", "Zafar"),
    ("Claire", "Dechaux"),
    ("Thomas", "Kientz"),
    ("Clothilde", "Voisin"),
]

assos = [
    ["EJE", "https://www.linkedin.com/company/ensae-junior-etudes/"],
    ["Tribu", "https://www.linkedin.com/company/tribu-ensae/"],
]

admins = [
    ("admin", "admin"),
]


def initialize_database():
    """Initialize the database with dummy data."""
    with app.app_context():
        db.session.remove()
        db.drop_all()
        db.create_all()

        student_ids = []
        asso_ids = []
        admin_ids = []
        teacher_ids = []
        class_ids = []
        lesson_ids = []

        
            
         # 12 - Add association events
        print("Adding notifications ...")
        # test notif 
        print("test1")
        sent_by_user_id = admin_ids[0]
        print("test2")
        add_notification(
            "Test notif",
            "This is a test to test notifications",
            sent_by_user_id,
            "All users",
        )
        print("test8")



if __name__ == "__main__":
    initialize_database()
